import React from 'react'
import {connect} from 'react-redux'
import {Link, withRouter} from 'react-router'
import {compose} from 'redux'
import R from 'ramda'

import {
	getCategories,
	getActiveCategoryId
} from 'selectors'

const Categories = ({categories, activeCategoryId}) => {
	const renderCategory = (category, index) => {
		const getActiveState = R.propEq('id', activeCategoryId)
		return (
			<Link
				to={`/categories/${category.id}`}
				className={'list-group-item' + (getActiveState(category) ? ' active' : '')}
				key={index}
			>
				{category.name}
			</Link>
		)
	}

	const renderAllCategory = () => {
		return (
			<Link
				to='/'
				className={'list-group-item' + (R.isNil(activeCategoryId) ? ' active' : '')}// if undefined -> active class
			>
				All
			</Link>
		)
	}

	return (
		<div className='well'>
			<h4>Brand</h4>
			<div className='list-group'>
				{renderAllCategory()}
				{categories.map((category, index) => renderCategory(category, index))}
			</div>
		</div>
	)
}

const mapStateToProps = (state, ownProps) => ({
	categories: getCategories(state),
	activeCategoryId: getActiveCategoryId(ownProps)
})

export default compose(
	withRouter, // позволяет в mapStateToProps получать ownProps из роутера
	connect(mapStateToProps, null)
)(Categories)
